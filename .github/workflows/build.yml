name: Build
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      MACOS_CERTIFICATE: ${{ secrets.MACOS_DEV_ID_APP_CERTIFICATE }}
      MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_DEV_ID_APP_CERTIFICATE_PWD }}
      MACOS_CERTIFICATE_NAME: ${{ secrets.MACOS_DEV_ID_APP_CERTIFICATE_NAME }}
      MACOS_CI_KEYCHAIN_PWD: ${{ secrets.MACOS_CI_KEYCHAIN_PWD }}

    strategy:
      matrix:
        os: [macos-14]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v2
      - name: install MacOS (aarch64) build dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ] && [ "$RUNNER_ARCH" == "ARM64" ]; then
            brew install pango
          fi
      - name: Codesign app bundle (MacOS)
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            # Turn our base64-encoded certificate back to a regular .p12 file
            echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12

            # We need to create a new keychain, otherwise using the certificate will prompt
            # with a UI dialog asking for the certificate password, which we can't
            # use in a headless CI environment

            security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
            security default-keychain -s build.keychain
            security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
            security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
            security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          fi
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      # setuptools needs to be available globally for the yarn build script
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
      - name: Build GRAPEVNE
        working-directory: ./electron-app
        run: |
          ./build.sh
      - name: Verify code signatures
        working-directory: ./electron-app
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            pushd out/GRAPEVNE-darwin-*
            codesign --verbose --verify GRAPEVNE.app
            codesign -vvv GRAPEVNE.app
            xcrun stapler validate GRAPEVNE.app
            spctl --assess --verbose GRAPEVNE.app
            popd
          fi
